version: 2.1

commands:
  test_package:
    parameters:
      package:
        type: string
    steps:
      - restore_cache:
          name: "[<< parameters.package >>] Restoring cache"
          keys:
            - npm-{{ .Environment.CACHE_VERSION }}-<< parameters.package >>-{{ checksum "./packages/<< parameters.package >>/package-lock.json" }}
      - run:
          name: "[<< parameters.package >>] Installing dependencies"
          working_directory: ./packages/<< parameters.package >>
          command: |
            if ! [ -d node_modules ]; then
              printf "Cache is not available, installing dependencies\n\n"
              npm ci
            else
              printf "Cache is available, skipping installation\n"
            fi
      - save_cache:
          name: "[<< parameters.package >>] Saving cache"
          key: npm-{{ .Environment.CACHE_VERSION }}-<< parameters.package >>-{{ checksum "./packages/<< parameters.package >>/package-lock.json" }}
          paths: ./packages/<< parameters.package >>/node_modules
      - run:
          name: "[<< parameters.package >>] Running tests"
          working_directory: ./packages/<< parameters.package >>
          command: |
            npm run test:ci --if-present

jobs:
  test_packages:
    docker:
      - image: 'cimg/node:15.5.1-browsers'
    steps:
      - checkout
      - test_package:
          package: core

workflows:
    run_tests:
      jobs:
        - test_packages
